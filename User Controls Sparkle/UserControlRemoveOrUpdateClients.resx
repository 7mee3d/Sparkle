<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifyIconRemoveAndUpdateClient.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="notifyIconRemoveAndUpdateClient.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        O/+deAD//sMB//zCAf/UowD/RzcE/4RlAf/2vQH//MEB/+epBP9IMgLrAAAAQQYGBLJVTjb/dWxK/zMx
        KP+TkoL/QD4y/7GngP/HvJD/eHFW/0pIP//Rzrf/6+jO/9XSuv+hn43/zMmy/+vozv/c2cD/WllO/2Vf
        Sf/AtYv/WFI6/514AP/+wwH/+sAB//rAAf/rtAH/87sB//vBAf/7wQH/56kE/0gyAusAAABBDg0J22pi
        Q/9gWTz/Tk1D/3t5bP9aVUH/xLmN/8e8kP/Btov/T0o5/4KAcv/f3MP/iId3/1hXTP99e2z/2NW9/5qY
        h/9CPzH/uK6F/8W6jv9XUTr/nXgA//7DAf/6wAH/+sAB//vBAf/7wQH/+sAB//vBAf/nqQT/SDIC6wAA
        AEETEQz0dmxL/1FLM/9jYVb/amld/3JrUf/IvZD/tKqC/4+HZ/8/Oy7/goBy/5COfv8rKB3/Ukwz/y8s
        Hv96eGr/lZSD/zk2K/+Hf2D/rqR9/1ROOP+gegD//8YB///DAf//wwH//8MB//zCAf/6wAH//8QB/+us
        BP9JMwLsAAAAQhYUDft3bkz/TUcv/2ZlWf9kY1f/TEg2/19aRP8+OzD/S0lA/4GAcf/T0Lj/ZGNY/0pE
        Lf+Kf1f/WlM4/09ORP/Sz7j/jYx8/1FPRf88OS//Ih8W/089AP9/YgD/fGAA/3xgAP97XwD/rYUB/u20
        AvqXdAH+c1QC/yQZAeoAAAA9EhEL83VsSv9SSzP/YmBV/4+Nff9OTUP/fXxu/7a0oP/b2MD/6+jN/+7r
        0P+Rj3//Kygd/1BJMf8uKx7/enhq/+rnzP/s6c//3tvC/7+9p/9qaV7/HxgH/3NRA/+BWwT/gFoE/39Z
        BP+tegb+6KQH/ZVoBP49KgH/AgEAxAAAABoODQnaaWFD/2FZPP9KST//19W9/+DdxP/r6M7/7erQ/+nm
        zP/W07z/t7Wh/768p/+LiXr/WlhO/399b/++vKf/trOf/9LPuP/n5Mr/7uvR/9rYwP9RTT3/nGwD//et
        CP/1rAj/9awI//OrCP/xqQj/y44E/zwqAfIAAABWCgYAAAYFBLBUTTX/dWxK/zEvJf/Dwav/6ufN/9bT
        u/+oppT/cG9i/0VEOv88OC3/Q0E4/8TBq//m48n/09C5/01MQv86OC3/QUA3/2hnW/+gnoz/09G5/6al
        lP9GNhT/05MG//OqCP/xqQj/8qoI/+OeBf9wTgL/BQQAnQAAAAkAAAAAAAAAczczI/l/dVD/OjYl/4SD
        dP+6t6P/Pz42/0NAMv9nYUr/l49s/7Gmf/9OSTn/mZeG/+7r0f+0sp7/QT4x/6uhev+elXL/bWdO/0dE
        Nf84Ny//oJ6M/19dUf9yTwH/6qQH/+6mB//qowb/p3QC/yAWANgAAAAtAAAAAAAAAAAAAAAtFxUO3HFo
        SP9iWz7/PDsy/5eWhf8wLyf/j4dm/8m+kf/IvZD/wreM/1VQPv+WlIT/7uvQ/7Gvm/9HRDX/urCG/8i8
        kP/JvpH/oJdz/zAuJP+OjHz/RkU8/xgRA/9ZPgj/YkUK/1xACf4uIAL5AAAAeQAAADEAAAAbAAAAAAAA
        AAUCAgGORD4r/4B2Uf89OCf/Y2JX/399b/89Oi7/nZRw/8e8kP/Ct4z/VVA+/5aUhP/u69D/sa+b/0ZD
        Nf+6sIb/yL2Q/6ifef9FQjP/b25h/3RzZf8wLR//JiQe/xQVZf8fIJL/Gx2F/wcIJu8BAQKsDQ0s6AUF
        E7kAAAAbAAAAAAAAAC4UEw3ZZ2BB/3ZtSv8wLiH/dHJl/358bv86OC7/d3BV/6+lfv9TTj3/lpSE/+7r
        0P+xr5v/RkI1/6uie/+DfF7/PDku/29uYf+CgHL/MC0i/2dfQP8vLCf/Kiqc/z8/4/8yMsn/Cwsy/gwM
        KvsvL6L/DAwp4gAAAC0AAAAAAAAAAQAAAGYmIxn0dWxL/29mR/8wLSH/ZWRZ/5GPf/9TUkj/PDou/yop
        If+enIv/7erQ/7i2of8rKiP/Ozkt/0tKQP+KiHn/cXBj/y8tIv9kXT//Tkgy/xkYFv8cHED/IyNX/x8f
        Tv4QEBv/EhIz/xoaWf8CAgigAAAADgAAAAAAAAAAAAAACgIBAYkuKx74dWxK/3VrSv88Nyb/Pz00/318
        bv+OjX3/h4V2/9PQuf/t6s//3NnA/4yLe/+KiHn/gYBy/0VDO/83MyT/cGdH/3ZtSv8pJx3/hIJ1/6yq
        l/+qqJT/q6iU/6ypl/9+fG//Dw8Q/gMEDtECAgWZAAAAAAAAAAAAAAAAAAAAEAEBAYZLRjDhhXpU/YF3
        Uf9gWDz/OTUl/zU0Kv9UU0j/amld/3FwY/9qaV3/V1VL/zg2Lf82MyT/WlM5/351UP9wZ0f/Lysd+hIS
        EPe2sqb/+PLj//Tv3//079//9fDg/9rWwf4wMDb/ICB1/wkJHv8AAAAAAAAAAAAAAAABAQEAAAAAB2Nb
        QCZPSTOtSEMu/3JqSP9/dVD/cmpI/1xVOf9LRS//RkAr/0tFLv9aUzj/cGdH/391UP93bkz/Tkky/xsZ
        EeYAAAB+AgICkmRiXP7V0cT/4NvO/+Dbzv/h3M/9ycaz+C4uLf0LCyzvBAQN2QAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAACYEBAKTGRcQ4jo2JftYUTj/bmVF/3duTP95cE3/eXBM/3FoSP9dVjv/QDsp/R4c
        E+kGBQSlAAAAPgAAAAMAAAAdCgoJnywrKOQ/PjrqPz466j49Oek1NTDoDg4MywAAAEkAAAAjAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAsAQEAbQgHBaQPDgrLFhQO4BsZEeYZFxDjEA8K0QkJ
        Bq4BAQF5AAAANwAAAAkAAAAAAAAAAAAAAAAAAAAKAAAAJQAAADAAAAAwAAAAMAAAADAAAAAfAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAABQAAAAcAAAAIwAA
        ACAAAAAWAAAACgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////8AH/wDAA/gAAAPgAAADwAAAA4AAAAMAAAACAAAAAgAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAADAAAAAQAAAACAAAAAgAAAAMAA
        AADgAAAA8AAAAPwAAAD+AA4B/8A///////8=
</value>
  </data>
</root>